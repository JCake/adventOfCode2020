const doc = document.children[0].innerText
undefined
doc
"4-5 r: rrrjr
9-10 x: pxcbpxxwkqjttx
8-13 b: rjbbbbvgrbrfjx
3-5 d: dtddsdddddsddddddwd
3-11 q: qbqsqqzqqxkmbqx
3-4 v: vgvhcvxlbfcwg
1-7 t: rtctmtt
8-11 s: ksssswsssstssssss
2-6 v: vxvvvlvv
16-18 c: ptgprcccvqvbfcnckc
18-20 w: wgtnwgnwvzwqhqtwvwrw
14-18 k: kkkkkkxkkkkkknkkkl
3-6 f: pwfgqlbbrfvwf
6-10 h: pqlfbhcnglgvhdgddn
2-13 k: bkfdvztsdkkkwm
8-12 d: dddddddddddd
1-10 v: lvvvvvvvvvvnvvvvvv
2-3 d: dfdz
3-10 w: vwwwwwnwwwwwxww
2-7 c: ccwkpggxd
4-5 g: kgqqg
1-14 q: bcqqqqqqdqqqqbqqcq
1-10 j: jjjjjjjfjjjjhjj
1-4 x: bkjghxrsb
2-15 v: vvvpvvvpvvrvvvvvvv
1-6 q: pqlqqn
2-6 k: skdkqk
14-16 g: sggbggggrgbmgtgg
8-9 f: ffffnkffk
1-2 x: tjxxl
6-8 t: tzdtvttkhctk
1-4 z: zzzkzzzzzxzzz
1-2 h: hthhjhhhqq
2-4 d: ddpkzvxbjnxhw
1-4 k: kkhq
8-9 s: sssssssps
5-11 b: bbbbbbbbbrbbbbbb
2-4 g: crrj
4-5 j: djjjqzmxttjg
1-4 b: bbbbb
3-4 z: zrqx
2-12 l: vvggvdqqcjplqzkczgj
15-16 l: sgclwcllcvltvthl
2-3 c: tbclrfclrhxvtlw
8-11 n: nhnnnwlqnnznnnnnn
7-15 c: jlcxswgncffcpnbdrhlx
6-14 k: kkkkkgkkkkkkkkk
8-11 r: rrrrrrrsrrrkrrr
4-6 m: fmhmtmm
10-12 p: ppcpjppppppg
2-5 m: zbtmmmmlmmmhvblmmnx
4-5 q: hqwhr
2-5 r: rzrrwrr
9-10 k: kkkkkkkkchk
3-5 p: ppptkpn
2-3 f: ffxfzwd
6-14 p: ppppppppppppppppp
1-7 f: hffffffkffff
2-13 h: hhhhhhhhhmmhvhhhjhhh
8-10 z: zzzzkzzbdzz
8-16 w: wwwwwwwwwwwwvwwwwww
3-10 n: qqpnnnlnwznctsbjnn
2-4 m: rmfw
2-5 z: jzfsqt
14-15 n: nnnnfnfndpnnnnn
7-9 d: drvdpddpddd
8-12 j: kjjjjjjqjjjjjj
3-11 h: hxhhhhllhthwhjhxhhhz
3-5 w: ndwww
5-10 r: qrrrrrrrrrrr
9-10 k: kkkdlkkkkwknkg
5-7 t: lstztlh
1-2 j: jljk
5-19 q: zkrqqwthdjgzqzpjwkq
2-3 r: drrrpswzwfmrfcrss
8-12 r: qrrrdrxfzdqb
17-18 x: cxbdcxxxxxxkxxdxxq
12-15 d: dvxdddddndzldlmc
6-14 m: mmmmmsmmmmmmmmm
2-4 s: lssf
1-4 p: tpppp
4-10 w: wwwwwwwwwpwww
3-14 p: fshdffznzrppwpp
1-8 l: hllllmlf
1-18 m: mmmmmmmmmmmmmmmmtmm
5-7 p: pfpqpppp
7-15 q: qzkqvfxqqrvqqqcnxccc
3-4 g: jlgggtk
2-3 f: dfffffffffff
2-3 j: jjjmjs
8-10 t: tthtmxttftftvttntqkh
1-13 x: xxxxxxxsxxxxxx
2-3 d: fjdd
13-17 b: nnxgrpkqgtnhjsnbcqhb
12-18 x: lnqlnzqxxlxclzpwxx
7-10 l: gxxlqllqmllglmls
2-15 j: djfqjtlswxsdrvwcwkl
7-9 n: hdblrjntz
2-4 f: ffzff
2-3 b: bvbb
10-14 n: tglngsjnzlptknxcrbdn
15-16 m: mmmksfmsbzmmjnqmm
3-6 g: kgzmgk
9-17 g: gcgrgxhgggmgrrdqtdg
3-5 h: whcfh
4-5 g: kpdgw
2-10 d: dhdddddddld
9-12 l: stsjflnqblqtl
2-3 t: tttt
18-19 t: tttctttttttttttttqj
5-8 x: xxxdxxxxxmxhpxdpx
5-8 h: hhhphhhkhtthhph
1-7 l: wlllllnl
4-7 x: xxxlxxsx
14-15 r: rrrrdlvrrrrrdjvrrr
11-18 c: hbhtbtczsbcqvrkxwc
14-17 d: ndqzdrcftdkdddddv
2-3 l: llgf
7-8 z: hvqcstzrzz
3-13 g: ggtggggggggggggggg
11-12 r: dgnzdmsrqgrccf
8-9 z: zqzzzzzzbzz
7-9 h: hllhhhwhhzhrc
7-9 g: ghgkgwrvg
5-6 d: ddddknd
4-5 s: qqlss
1-2 q: jcqq
9-10 v: vvvvvvvvxwvvvv
4-9 p: zqjpvpttf
16-20 t: tpttthqttcpttttftttk
8-13 p: pppppppmppppppp
1-5 p: hpppzp
2-4 t: ktttt
2-4 f: jfltfr
2-6 t: gxtmnt
2-8 v: vvjqpvvxvvfvzvv
1-4 l: dqlsll
1-3 b: zhqgqrbk
7-9 n: nncfnnnnwnnn
4-12 w: bqswnwqwlkhwbcc
1-2 b: kbbbb
4-11 x: xjxkxxxnxxxxxxxxxx
2-10 b: bbbwnbknghbbbbbj
9-11 h: hhhmghhshtqh
8-9 t: tdctmtfpt
8-19 b: bbbbbbbsbngbzhbpbbb
11-12 k: dxkkhkknrkrkkkz
8-10 b: fcbwbgbkbb
1-5 h: qfdhn
6-9 w: wwwvkpwwbwwwww
1-10 c: ccccccccccccccccc
13-14 k: kxzkfkkkkkkfvckkk
2-4 p: wrrrpb
7-9 s: spsssssvssssxzsqzssh
4-5 f: fffgf
13-15 n: clhngxdnnsnqlptnz
10-11 f: fffffffffhlff
9-13 k: kkkkkkkktkkkkk
15-16 p: pxppppppgprslpln
4-6 s: mscssms
2-4 b: zbjjjz
13-17 n: cthpnbmzwxbnnxngns
14-18 z: zzzzzzzzzzzzzdzzzvz
16-18 h: hhhhhhhhhhhhhhhvhhh
1-6 s: xssfswlsssscdnshss
7-10 v: cwrzfzvppzgcvkxs
1-2 n: xnjnnrn
8-9 b: rnbbbskbrhbbbfbz
10-20 x: jljkxspllxqhjvknfxqx
6-7 q: qxskpqq
5-8 q: mwhqqqdfq
11-15 l: lplldlllltlljll
3-8 j: grsdjjzj
2-8 p: pppppppjp
3-10 m: xpfmmmvmnmrtjmfbkpb
10-11 k: cfkbkndxkxgk
11-12 k: kkkkkkkkkkkb
10-11 t: ttttttttttnt
10-11 w: wwwwvgswwwwwwwwww
3-4 c: drkc
8-11 f: ffgfdffjffnflnqfsff
5-6 n: nnnnwtq
10-11 s: dsswkmshsbsslwgsvss
8-11 z: zzzzzzzlzzsz
8-15 s: sssssssssnsssssssss
9-18 d: ghzcrfrhflqdsvrphd
11-16 q: fqqqkpfhxqqmgxcj
4-6 b: qcbzcv
2-5 q: qqlpn
9-10 c: ccccbqgxcc
11-14 v: nzvjhxvvnvbvvvvv
1-4 q: xqgq
5-12 t: ftdtmwmqkhthj
5-6 w: bqlwwr
11-12 t: vlfgktvfttrt
4-7 n: nfnvtnjnnbnbnnn
9-15 w: wwwwwwwwwwwwwwjwww
17-18 k: kkkkkpkkkkkkkkkkkckk
2-4 x: nxnx
2-4 s: lbjm
4-6 j: jjjqjzj
3-4 v: lvwv
5-8 x: xhxxxsgxnjfdb
4-6 m: wmmlcx
6-10 t: tttttdttttt
15-18 d: dddddsdddddddddddldd
14-16 r: crwxgrrlrrgsrrqc
4-8 b: bbccgprbbqmvmjcbbfn
8-10 d: dddddddddldd
3-5 k: jkkzk
19-20 q: bnqnchhwjjrnzzqcqqvq
2-3 g: ghfggxgbg
11-16 r: pgqjshvmjrzrrrxsr
4-6 j: qjjjnrjzjjrjj
6-10 n: qrwwvnngtnsgmn
7-8 m: mmmmmmhhmm
5-6 c: clfcnx
1-2 c: zcccc
9-10 q: lpqfbkdqqq
4-9 t: wrjtzlrptlkvsmt
13-15 l: klsgqllzlvlrbkl
4-5 j: jjjljj
6-11 p: ppppppppppbrppppp
11-12 q: cqqqqqqqqqtq
8-9 z: zzzxmzszz
12-18 z: zzzzzzzzwzzzzzzzfzzz
12-13 h: nhhhhshhptzjs
3-5 c: ccmghck
6-9 z: zzjzzjzvzzz
12-15 d: dddddddddddkddddd
7-11 c: qwcccmccccc
10-12 t: ttttdvwrwrwgt
2-3 l: ljbll
8-9 x: xxxxdxxmx
1-4 b: wpdgxfdsngsbbbpl
16-19 f: fzwrdbblftrblfjfplw
6-7 p: ppppppg
5-7 l: mllllglllfllllvlxll
4-6 b: bbnlbbbbbbbbbbbbb
2-4 d: ldl"
doc.split(/\r/)
["4-5 r: rrrjr↵9-10 x: pxcbpxxwkqjttx↵8-13 b: rjbbbb…qglbhl↵17-19 b: bbbbbbbbbbbbbbbbbbq↵3-5 x: xxqxm↵"]
doc.split(/\n/)
(1001) ["4-5 r: rrrjr", "9-10 x: pxcbpxxwkqjttx", "8-13 b: rjbbbbvgrbrfjx", "3-5 d: dtddsdddddsddddddwd", "3-11 q: qbqsqqzqqxkmbqx", "3-4 v: vgvhcvxlbfcwg", "1-7 t: rtctmtt", "8-11 s: ksssswsssstssssss", "2-6 v: vxvvvlvv", "16-18 c: ptgprcccvqvbfcnckc", "18-20 w: wgtnwgnwvzwqhqtwvwrw", "14-18 k: kkkkkkxkkkkkknkkkl", "3-6 f: pwfgqlbbrfvwf", "6-10 h: pqlfbhcnglgvhdgddn", "2-13 k: bkfdvztsdkkkwm", "8-12 d: dddddddddddd", "1-10 v: lvvvvvvvvvvnvvvvvv", "2-3 d: dfdz", "3-10 w: vwwwwwnwwwwwxww", "2-7 c: ccwkpggxd", "4-5 g: kgqqg", "1-14 q: bcqqqqqqdqqqqbqqcq", "1-10 j: jjjjjjjfjjjjhjj", "1-4 x: bkjghxrsb", "2-15 v: vvvpvvvpvvrvvvvvvv", "1-6 q: pqlqqn", "2-6 k: skdkqk", "14-16 g: sggbggggrgbmgtgg", "8-9 f: ffffnkffk", "1-2 x: tjxxl", "6-8 t: tzdtvttkhctk", "1-4 z: zzzkzzzzzxzzz", "1-2 h: hthhjhhhqq", "2-4 d: ddpkzvxbjnxhw", "1-4 k: kkhq", "8-9 s: sssssssps", "5-11 b: bbbbbbbbbrbbbbbb", "2-4 g: crrj", "4-5 j: djjjqzmxttjg", "1-4 b: bbbbb", "3-4 z: zrqx", "2-12 l: vvggvdqqcjplqzkczgj", "15-16 l: sgclwcllcvltvthl", "2-3 c: tbclrfclrhxvtlw", "8-11 n: nhnnnwlqnnznnnnnn", "7-15 c: jlcxswgncffcpnbdrhlx", "6-14 k: kkkkkgkkkkkkkkk", "8-11 r: rrrrrrrsrrrkrrr", "4-6 m: fmhmtmm", "10-12 p: ppcpjppppppg", "2-5 m: zbtmmmmlmmmhvblmmnx", "4-5 q: hqwhr", "2-5 r: rzrrwrr", "9-10 k: kkkkkkkkchk", "3-5 p: ppptkpn", "2-3 f: ffxfzwd", "6-14 p: ppppppppppppppppp", "1-7 f: hffffffkffff", "2-13 h: hhhhhhhhhmmhvhhhjhhh", "8-10 z: zzzzkzzbdzz", "8-16 w: wwwwwwwwwwwwvwwwwww", "3-10 n: qqpnnnlnwznctsbjnn", "2-4 m: rmfw", "2-5 z: jzfsqt", "14-15 n: nnnnfnfndpnnnnn", "7-9 d: drvdpddpddd", "8-12 j: kjjjjjjqjjjjjj", "3-11 h: hxhhhhllhthwhjhxhhhz", "3-5 w: ndwww", "5-10 r: qrrrrrrrrrrr", "9-10 k: kkkdlkkkkwknkg", "5-7 t: lstztlh", "1-2 j: jljk", "5-19 q: zkrqqwthdjgzqzpjwkq", "2-3 r: drrrpswzwfmrfcrss", "8-12 r: qrrrdrxfzdqb", "17-18 x: cxbdcxxxxxxkxxdxxq", "12-15 d: dvxdddddndzldlmc", "6-14 m: mmmmmsmmmmmmmmm", "2-4 s: lssf", "1-4 p: tpppp", "4-10 w: wwwwwwwwwpwww", "3-14 p: fshdffznzrppwpp", "1-8 l: hllllmlf", "1-18 m: mmmmmmmmmmmmmmmmtmm", "5-7 p: pfpqpppp", "7-15 q: qzkqvfxqqrvqqqcnxccc", "3-4 g: jlgggtk", "2-3 f: dfffffffffff", "2-3 j: jjjmjs", "8-10 t: tthtmxttftftvttntqkh", "1-13 x: xxxxxxxsxxxxxx", "2-3 d: fjdd", "13-17 b: nnxgrpkqgtnhjsnbcqhb", "12-18 x: lnqlnzqxxlxclzpwxx", "7-10 l: gxxlqllqmllglmls", "2-15 j: djfqjtlswxsdrvwcwkl", "7-9 n: hdblrjntz", "2-4 f: ffzff", "2-3 b: bvbb", …]
const lines = doc.split(/\n/)
undefined
let count = 0;
undefined
lines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1];
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let countOfLetter = pw.match(new RegExp(letter, 'g') || []).length;
    if(countOfLetter >= parseInt(numParts[0]) && countOfLetter <= parseInt(numParts[1])){
        count++;
    }
});
VM1411:9 Uncaught ReferenceError: numParts is not defined
    at <anonymous>:9:34
    at Array.forEach (<anonymous>)
    at <anonymous>:1:7
(anonymous) @ VM1411:9
(anonymous) @ VM1411:1
lines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1];
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let countOfLetter = pw.match(new RegExp(letter, 'g') || []).length;
    if(countOfLetter >= parseInt(nums[0]) && countOfLetter <= parseInt(nums[1])){
        count++;
    }
});
VM1452:8 Uncaught TypeError: Cannot read property 'length' of null
    at <anonymous>:8:64
    at Array.forEach (<anonymous>)
    at <anonymous>:1:7
(anonymous) @ VM1452:8
(anonymous) @ VM1452:1
lines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1];
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let countOfLetter = (pw.match(new RegExp(letter, 'g')) || []).length;
    if(countOfLetter >= parseInt(nums[0]) && countOfLetter <= parseInt(nums[1])){
        count++;
    }
});
VM1462:8 Uncaught TypeError: Cannot read property 'match' of undefined
    at <anonymous>:8:29
    at Array.forEach (<anonymous>)
    at <anonymous>:1:7
(anonymous) @ VM1462:8
(anonymous) @ VM1462:1
lines = lines.filter((line) => !!line)
VM1559:1 Uncaught TypeError: Assignment to constant variable.
    at <anonymous>:1:7
(anonymous) @ VM1559:1
let betterLines = lines.filter((line) => !!line))
VM1662:1 Uncaught SyntaxError: Unexpected token ')'
let betterLines = lines.filter((line) => !!line)
undefined
count
418
count = 0
0
betterLines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1];
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let countOfLetter = (pw.match(new RegExp(letter, 'g')) || []).length;
    if(countOfLetter >= parseInt(nums[0]) && countOfLetter <= parseInt(nums[1])){
        count++;
    }
});
undefined
count
398
count = 0
0
betterLines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1];
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let firstPos = pw[parseInt(nums[0]) + 1];
});
undefined
betterLines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1];
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let firstPos = pw[parseInt(nums[0]) + 1] == letter;
    let secondPos = pw[parseInt(nums[1]) + 1] == letter;
    if((firstPos || secondPos) && !(firstPos && secondPos)){
        count++
    }
    
});
undefined
count
402
count = 0
0
betterLines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1];
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let firstPos = pw[parseInt(nums[0]) + 1] == letter;
    let secondPos = pw[parseInt(nums[1]) + 1] == letter;
    if((firstPos || secondPos) && !(firstPos && secondPos)){
        count++
    }
    
});
undefined
count = 0;
0
betterLines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1];
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let firstPos = pw[parseInt(nums[0]) - 1] == letter;
    let secondPos = pw[parseInt(nums[1]) - 1] == letter;
    if((firstPos || secondPos) && !(firstPos && secondPos)){
        count++
    }
    
});
undefined
count
425
count = 0
0
betterLines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1];
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let firstPos = (pw[parseInt(nums[0]) - 1] == letter);
    let secondPos = (pw[parseInt(nums[1]) - 1] == letter);
    if((firstPos || secondPos) && !(firstPos && secondPos)){
        count++
    }
    
});
undefined
let pw = 'abcde'
undefined
let firstPos = pw[1-1] == 'a'
undefined
let secPos = pw[3-1] == 'a'
undefined
(firstPos || secondPos) && !(firstPos && secondPos)
VM2587:1 Uncaught ReferenceError: secondPos is not defined
    at <anonymous>:1:42
(anonymous) @ VM2587:1
(firstPos || secPos) && !(firstPos && secPos)
true
betterLines.forEach((line) => {
    let parts = line.split(':');
    let rule = parts[0];
    let pw = parts[1].replace(' ','');
    let ruleParts = rule.split(' ');
    let nums = ruleParts[0].split('-');
    let letter = ruleParts[1];
    let firstPos = (pw[parseInt(nums[0]) - 1] == letter);
    let secondPos = (pw[parseInt(nums[1]) - 1] == letter);
    if((firstPos || secondPos) && !(firstPos && secondPos)){
        count++
    }
    
});
undefined
count - 425
562